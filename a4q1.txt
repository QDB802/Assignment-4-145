Name: Ken Duff
NSID: qdb802
Student#: 11318955
CMPT 145
Instructor: Lauresa Stilling

a)
The Function Definition begins on line 25.
It has a void return-type (i.e. None)
A function named fizzbuzz.
And a parameter, "n" with an int type (This is considered 1 parameter, not 2.)
This is much different from python, with significant differences in formatting function definitions:

C: return_type function_name(parameter-list) -> void fizzbuzz(int n)
Python: def function(parameters):
            ...
            return return_value
return statements can be a data_type such as int, str, etc. It is not specified in the function definition like in C.

b)
The function call occurs on line 47 with the call:
fizzbuzz(input);
This is semi-identical to pythons function call except for the use of the semicolon on C.
C: function(parameters);
Python: function(parameters)

c)
The variable used in the program is "i". It is used in the loop.
Input is also used as a variable, as it's updated once the inputs a number, then used in the main fizzbuzz program.
The parameter used in the program is "n". it is used in the fizzbuzz program to determine the amount of times the loop
should cycle through.
The argument used in the program is also input. It is run in the fizzbuzz program.

d)
Line 13 has an include statement, which seems semi-related to Python's import function.
Line 18 has a for loop, with "i" initialized at 1, the bounds set to the parameter n, and the increment operator.
(i++ is more or less equal to i = i + 1)
Line 36 asks for user input from the console, similar to the input() function
Line 37 views the console input, and extracts the number and saves it to a variable, similar to the
argv command from sys in Python.

e) What the code does is it initially asks for user to input a number, which is then assigned to variable input and used
as an argument for the fizzbuzz function. In fizzbuzz, it runs the value through several loops in order to determine
what is printed to console:
* If the number is factorable by 3 and 5, it prints "FizzBuzz" to the console (ex. 15)
* If the number is factorable by only 3, it prints "Fizz" to the console (ex. 9)
* If the number is factorable by only 5, it prints "Buzz" to the console (ex. 20)
* Otherwise, it simply prints the original number to the console (ex. 4)
Example running of the program:
Enter a number: 20
1       2       Fizz    4       Buzz    Fizz    7       8       Fizz    Buzz    11      Fizz    13      14      FizzBuzz
16      17      Fizz    19      Buzz

f)
Most C related information was acquired from:
https://www.gnu.org/software/gnu-c-manual/gnu-c-manual.html
Any information relating to the <stdio.h> came from:
https://pubs.opengroup.org/onlinepubs/7908799/xsh/stdio.h.html
The online C interpreter used was found at:
https://www.onlinegdb.com/

g)
The time complexity of this program would be O(N)
This is because let us use N for this program. The program will always iterate through the for loop N times.
It is only N times because there is no secondary loops that it must go through. And even in the worst cases, it will
always be N times. So, the time complexity would be O(N).

